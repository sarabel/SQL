-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-- Then the Spotify Data .csv was inserted into the table.

SELECT * FROM Spotifydata;

--What is the average danceability and popularity by artist and track

SELECT artist_name, track_name, AVG(danceability), AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

--Who are the top 10 artists based on popularity
SELECT artist_name,track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

--What artist released the longest song?
SELECT artist_name,track_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

--What's the average danceability for artists with the 10 most popular songs

SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE track_id IN 
    (SELECT track_id 
     FROM BIT_DB.Spotifydata 
     ORDER BY popularity DESC 
     LIMIT 10);

--how many track  with popularity over 90 by artists
SELECT artist_name, COUNT(track_name)
FROM BIT_DB.Spotifydata
WHERE popularity >90
GROUP BY artist_name;

--which track(s) is the most popular ?
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity = (
    SELECT MAX(popularity)
    FROM bit_DB.Spotifydata);

--What artists are on the Top 50 List, and what are their tracks?
SELECT artist_name,
       GROUP_CONCAT ('  *  ' || track_name) Songs, COUNT (track_name)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY artist_name;

--which songs feature more than one artist 
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
WHERE track_name LIKE '%feat%' 
        OR track_name LIKE '%WITH %' ;
        
-- How many artists  have more than one song 
SELECT sum (artist_name)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING artist_name IN(
    SELECT artist_name
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    HAVING count(track_id) > 1
    );
