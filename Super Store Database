#This project utilizes the following Superstore data: 

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

#For this project, I used SQL to query the Superstore database to get information about items sold at the store and their prices. 

# Write a SQL query that orders the items by price

SELECT item_name, price 
FROM superstore
ORDER BY price;

# Write your own SQL query that will show a statistic about the item prices, like a sum, average, minimum, maximum, or count

# Product with min price
SELECT item_name , MIN(price) AS min_price
FROM superstore
GROUP BY item_name
ORDER BY min_price
LIMIT 1;

# Product with max price
SELECT item_name , MAX(price) AS mAX_price
FROM superstore
GROUP BY item_name
ORDER BY max_price DESC
LIMIT 1;

# average price by category
SELECT category , AVG(price) AS avg_price
FROM superstore
GROUP BY category
ORDER BY avg_price DESC;

# best rate product 
SELECT item_name , MAX(average_rating) AS max_rating
FROM superstore
GROUP BY item_name
ORDER BY max_rating DESC
LIMIT 1;

# best rate product 
SELECT item_name , MIN(average_rating) AS min_rating
FROM superstore
GROUP BY item_name
ORDER BY min_rating ASC
LIMIT 1;

# products by category
SELECT category , COUNT(item_name) AS products_by_category
FROM superstore
GROUP BY category
ORDER BY products_by_category;

# total products in stock by category
SELECT category , SUM(stock_quantity) AS total_products
FROM superstore
GROUP BY category
ORDER BY total_products;

# most expensive price by category ON HOLD
SELECT category, item_name , MAX(price) AS expensive_item_by_categ
FROM superstore
GROUP BY category, item_name
ORDER BY category,expensive_item_by_categ DESC;

# how many Air Purifier	are in stock
SELECT stock_quantity
FROM superstore
WHERE item_name = "Air Purifier";

# stock by product in category Electronics
SELECT item_name, stock_quantity
FROM superstore
WHERE category = "Electronics"
ORDER BY stock_quantity;

# Write your own SQL query that will show a statistic about the price for items in the category of "Kitchen Supplies".

SELECT *
FROM superstore
WHERE category = "Kitchen Supplies";

SELECT category , MAX(price) AS max_price, MIN(price) AS min_price, AVG(price) AS avg_price
FROM superstore
WHERE category = "Kitchen Supplies"
GROUP BY category;
